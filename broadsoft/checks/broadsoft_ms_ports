#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
#
# Author Trevor Steyn <trevor@webon.co.za>

broadsoft_ms_ports_default_values = (80,90,250)

def inventory_broadsoft_ms_ports(info):
	if info:
		yield None, "broadsoft_ms_ports_default_values"

def check_broadsoft_ms_ports(_no_item, params, info):
	warn,crit,max_g729 = params
	max_ports = 0
	prt 		= int(info[0][0])
	g729_prt 	= int(info[0][1])
	mx_cap 		= int(info[0][2])
	lic_cap 	= int(info[0][3])
	if mx_cap > lic_cap :
		max_ports =  lic_cap
	else:
		max_ports = mx_cap
	total_port_perc = (prt * 100) / max_ports
	total_g729_perc = (g729_prt * 100) / max_g729

	perfdata = [ ( "total_ports", prt ), ( "g729_ports", g729_prt) , ( "max_g729_ports", max_g729 ) ] 
	
	if (total_port_perc >= crit) or (total_g729_perc >= crit):
		return (2, "CRITICAL - " + str(total_g729_perc) + '% used (' + str(g729_prt) + ' g729 calls of '+ str(max_g729) + ')', perfdata)
	elif (total_port_perc >= warn) or (total_g729_perc >= warn):
		return (1, "WARNING - " + str(total_g729_perc) + '% used (' + str(g729_prt) + ' g729 calls of '+ str(max_g729) + ')', perfdata)
	elif (total_port_perc < warn) or (total_g729_perc < warn):
		return (0, "OK - " + str(total_g729_perc) + '% used (' + str(g729_prt) + ' g729 calls of '+ str(max_g729) + ')', perfdata)
	else:
		return (3, "UNKOWN - " + str(total_g729_perc) + '% used (' + str(g729_prt) + ' g729 calls of '+ str(max_g729) + ')', perfdata)
	

check_info["broadsoft_ms_ports"] = {
    'check_function':          check_broadsoft_ms_ports,
    'inventory_function':      inventory_broadsoft_ms_ports,
    'service_description':     'Broadsoft MS Ports',
    'snmp_info':               ('.1.3.6.1.4.1.6431.1.3', ['1.5.0', '1.10.0', '4.4.0', '4.5.0']),
    'snmp_scan_function':      lambda oid: oid(".1.3.6.1.4.1.6431.1.3.1.10.0") not in [ None, "" ],
	'has_perfdata':            True,
}
